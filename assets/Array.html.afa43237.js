import{d as n}from"./app.0460c160.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";var a="/tutorial/assets/Array1.e521c650.png",p="/tutorial/assets/Array2.02837c25.png";const t={},e=n(`<h1 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h1><h2 id="\u57FA\u672C\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u65B9\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u65B9\u6CD5</h2><h3 id="\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386" aria-hidden="true">#</a> \u904D\u5386</h3><p>for</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;k&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>forEach</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;k&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
arr<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>for of</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;w&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;k&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;o&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;p&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> eArr <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> letter <span class="token keyword">of</span> eArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>letter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="\u5904\u7406\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406\u6570\u7EC4" aria-hidden="true">#</a> \u5904\u7406\u6570\u7EC4</h3><p>map</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="\u8FC7\u6EE4" tabindex="-1"><a class="header-anchor" href="#\u8FC7\u6EE4" aria-hidden="true">#</a> \u8FC7\u6EE4</h3><p>filter \u4F20\u5165\u51FD\u6570\uFF0C\u5BF9\u6570\u7EC4\u6BCF\u4E00\u4E2A\u5143\u7D20\u8FDB\u884C\u5224\u65AD\uFF0C\u8FD4\u56DE\u7B26\u5408\u6761\u4EF6\u5143\u7D20\uFF08\u6570\u7EC4\uFF09</p><h3 id="\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#\u67E5\u8BE2" aria-hidden="true">#</a> \u67E5\u8BE2</h3><h4 id="\u662F\u5426\u5B58\u5728\u4E00\u4E2A\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u662F\u5426\u5B58\u5728\u4E00\u4E2A\u5143\u7D20" aria-hidden="true">#</a> \u662F\u5426\u5B58\u5728\u4E00\u4E2A\u5143\u7D20</h4><p>indexOf</p><p>lastIndexOf</p><p>find</p><p>findIndex</p><p>includes \u4F20\u5165\u5177\u4F53\u9700\u8981\u67E5\u8BE2\u7684\u6570\u636E\uFF0C\u5982\u679C\u5305\u542B\u5C31\u8FD4\u56DEtrue\u53CD\u4E4B\u4E3Afalse</p><p>every \u6570\u7EC4\u7684\u6BCF\u4E00\u9879\u90FD\u901A\u8FC7\u9A8C\u8BC1\u8FD4\u56DEtrue\uFF0C\u5426\u8005\u8FD4\u56DEfalse</p><p>some \u9700\u8981\u6709\u4E00\u9879\u901A\u8FC7\u9A8C\u8BC1\u5373\u53EF\u8FD4\u56DEtrue</p><h2 id="\u5177\u4F53\u4E8B\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u5177\u4F53\u4E8B\u4F8B" aria-hidden="true">#</a> \u5177\u4F53\u4E8B\u4F8B</h2><h3 id="\u521B\u5EFA\u6307\u5B9A\u957F\u5EA6\u7684\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u521B\u5EFA\u6307\u5B9A\u957F\u5EA6\u7684\u6570\u7EC4" aria-hidden="true">#</a> \u521B\u5EFA\u6307\u5B9A\u957F\u5EA6\u7684\u6570\u7EC4</h3><p>\u5982\u679C\u6211\u4EEC\u8981\u521B\u5EFA\u957F\u5EA6\u4E3A2\u7684\u7A7A\u6570\u7EC4 \u5E38\u7528\u4E00\u4E0B\u65B9\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
a<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [empty \xD7 2]</span>

<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [empty \xD7 2]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span>length<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [undefined, undefined]</span>

<span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [undefined, undefined]</span>

<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [undefined, undefined]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span>length<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2, 3, 4]</span>
<span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2, 3, 4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><code>Array.from</code>\u76F8\u5F53\u4E8E\u4E24\u6B65\u64CD\u4F5C \u521D\u59CB\u5316+\u904D\u5386</p><p>\u7ECF\u8FC7\u6D4B\u8BD5\uFF0C\u521D\u59CB\u6570\u7EC4\u4E3A<code>[0, 1, 2, 3, ...]</code>\u8FD9\u7C7B\u6570\u7EC4\uFF0C\u7B2C\u4E8C\u79CD\u6027\u80FD\u4F1A\u8F83\u597D</p><p><code>Array.from</code>\u65B9\u5F0F</p><p><img src="`+a+'" alt="images"></p><p>\u89E3\u6784\u8D4B\u503C\u65B9\u5F0F</p><p><img src="'+p+`" alt="images"></p><h3 id="\u751F\u6210\u4E8C\u7EF4\u7A7A\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u751F\u6210\u4E8C\u7EF4\u7A7A\u6570\u7EC4" aria-hidden="true">#</a> \u751F\u6210\u4E8C\u7EF4\u7A7A\u6570\u7EC4</h3><p>\u89E3\u6784\u8D4B\u503C+map\u65B9\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">[</span><span class="token operator">...</span><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u76F4\u63A5fill\u65B9\u5F0F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>\u6CE8\u610F\u5728\u8FD9\u79CD\u65B9\u5F0F\u4E0B\uFF0C\u5982\u679C\u4FEE\u6539<code>arr[0][1] = 1</code>\uFF0C\u5176\u4ED6\u6240\u6709\u9879\u90FD\u4F1A\u540C\u6B65\uFF0C\u6240\u4EE5\u8FD9\u79CD\u65B9\u5F0F\u662F\u4E0D\u5408\u9002\u7684\u3002</p><h3 id="\u6570\u7EC4\u5408\u5E76\u4E0D\u53BB\u91CD" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u5408\u5E76\u4E0D\u53BB\u91CD" aria-hidden="true">#</a> \u6570\u7EC4\u5408\u5E76\u4E0D\u53BB\u91CD</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4F7F\u7528 concat\uFF0C\u4E0D\u80FD\u53BB\u9664\u91CD\u590D\u503C</span>
<span class="token keyword">function</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// ES6\uFF0C\u540C\u6837\u4E0D\u80FD\u53BB\u9664\u91CD\u590D\u503C</span>
array1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>array1<span class="token punctuation">,</span> <span class="token operator">...</span>array2<span class="token punctuation">]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u6570\u7EC4\u53BB\u91CD\u5408\u5E76" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4\u53BB\u91CD\u5408\u5E76" aria-hidden="true">#</a> \u6570\u7EC4\u53BB\u91CD\u5408\u5E76</h3><p>\u5355\u4E00\u6570\u7EC4\u53BB\u91CD \u53EF\u4EE5\u4F7F\u7528Set\u6570\u636E\u7ED3\u6784</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2]</span>
<span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [object Set]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>\u6CE8\u610F\u6B64\u5904\u8FD4\u56DE\u7684\u662FSet\u683C\u5F0F\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u5982\u679C\u9700\u8981\u4F7F\u7528Array\uFF0C\u9700\u8981\u4F7F\u7528<code>Array.from(set)</code>\u66F4\u6539\u4E3AArray</p><p>\u591A\u4E2A\u6570\u7EC4\u5408\u5E76\u53BB\u91CD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">combine</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>arg</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//\u6CA1\u6709\u53BB\u91CD\u590D\u7684\u65B0\u6570\u7EC4 </span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> 
<span class="token keyword">var</span> m <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span> 
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">combine</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">,</span> l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     <span class="token comment">// [1, 2, 3, 4]</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u5316\u4E3A\u771F\u6B63\u7684javascript\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u5316\u4E3A\u771F\u6B63\u7684javascript\u6570\u7EC4" aria-hidden="true">#</a> \u7C7B\u6570\u7EC4\u5BF9\u8C61\u8F6C\u5316\u4E3A\u771F\u6B63\u7684JavaScript\u6570\u7EC4</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Native</span>
<span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ES6-way</span>
Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arrayLike<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>`,51);function c(o,l){return e}var r=s(t,[["render",c]]);export{r as default};
